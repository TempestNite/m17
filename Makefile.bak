# GCC compiler
CC = gcc

# Compiler flags
CFLAGS = -std=gnu89 

# The build SCANNER PARSER executable:
SCANNER = scan
PARSER = parser
DRIVER	= m17
INPUT = Input
STATE = state
TOKEN = Token

all: $(INPUT) $(STATE) $(TOKEN) $(PARSER) $(DRIVER)

$(INPUT):
	$(CC) $(CFLAGS) -c $(INPUT).c $(INPUT).h

$(TOKEN): $(INPUT).o
	$(CC) $(CFLAGS) -c $(TOKEN).c $(TOKEN).h

$(STATE): $(INPUT).o $(TOKEN).o
	$(CC) $(CFLAGS) -c $(STATE).c $(STATE).h

$(PARSER): $(STATE).o
	$(CC) $(CFLAGS) -c $(PARSER).c $(PARSER).h

$(DRIVER): $(INPUT).o $(TOKEN).o $(STATE).o $(PARSER).o
	$(CC) $(CFLAGS) -o $(DRIVER) $(DRIVER).c $(STATE).o \
	$(PARSER).o $(INPUT).o $(TOKEN).o

clean:
	$(RM) $(SCANNER) $(PARSER) $(INPUT).o $(TOKEN).o \
	$(STATE).o $(STATE).h.gch $(INPUT).h.gch $(TOKEN).h.gch \
	$(STATE).h.gch $(PARSER).o $(PARSER).h.gch
